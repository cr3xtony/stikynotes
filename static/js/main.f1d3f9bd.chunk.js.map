{"version":3,"sources":["components/Notes.js","App.js","index.js"],"names":["Notes","useState","notes","setNotes","allnotes","setAllNotes","color","setColor","date","setDate","noteText","setNoteText","styles","backgroundColor","handleChange","e","target","value","length","handleEdit","id","result","filter","note","text","Date","toLocaleDateString","split","m","d","y","dateString","newnotes","map","setEdit","Container","className","onClick","notefilter","star","dateObj","month","toLocaleString","day","getUTCDate","year","getUTCFullYear","newdate","newNote","uuidv4","onDragEnd","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","direction","provided","style","display","flexWrap","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","rows","cols","placeholder","onChange","marginBottom","characterLimit","FormGroup","controlId","bsSize","FormControl","autoFocus","type","cursor","height","width","borderRadius","marginRight","saveHandler","cancelHandler","starHandler","newNotes","deleteHandler","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1d3f9bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Container, FormControl, FormGroup } from 'react-bootstrap';\n\nconst Notes = () => {\n  const [notes, setNotes] = useState([]);\n  const [allnotes, setAllNotes] = useState('');\n  const [color, setColor] = useState('#F9F912');\n  const [date, setDate] = useState('');\n  const [noteText, setNoteText] = useState('');\n  const characterLimit = 200;\n\n  //dateGenerator\n  const dateString = (date) => {\n    let [m, d, y] = new Date(date).toLocaleDateString('en-US').split('/');\n\n    if (m.length == 1) {\n      m = `0${m}`;\n    }\n    if (d.length == 1) {\n      d = `0${d}`;\n    }\n    let newdate = `${y}-${m}-${d}`;\n    return newdate;\n  };\n  const dateGenerator = (date) => {\n    var dateObj = new Date(date);\n    var month = dateObj.toLocaleString('default', { month: 'long' }); //months from 1-12\n    var day = dateObj.getUTCDate();\n    var year = dateObj.getUTCFullYear();\n\n    let newdate = `${month} ${day}, ${year}`;\n    return newdate;\n  };\n\n  //for handle drag\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n    const items = Array.from(notes);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setNotes(items);\n  };\n  //for handling all notes button\n  const allNotesHandler = () => {\n    if (allnotes === '') {\n      setNotes(notes);\n    } else {\n      setNotes(allnotes);\n    }\n  };\n  //for handling toggle star\n  const starHandler = (id) => {\n    const newNotes = notes.filter((note) => note.id === id);\n\n    if (newNotes[0].star === false) {\n      const newnotes = notes.map((note) =>\n        note.id === id ? { ...note, star: true } : note\n      );\n      setNotes(newnotes);\n    } else {\n      const newnotes = notes.map((note) =>\n        note.id === id ? { ...note, star: false } : note\n      );\n      setNotes(newnotes);\n    }\n  };\n\n  //for handling starred button\n  const starredHandler = () => {\n    setAllNotes(notes);\n    const notefilter = notes.filter((note) => note.star === true);\n    setNotes(notefilter);\n  };\n\n  //for handling create note button\n  const createNote = (e) => {\n    var dateObj = new Date();\n    var month = dateObj.toLocaleString('default', { month: 'long' }); //months from 1-12\n    var day = dateObj.getUTCDate();\n    var year = dateObj.getUTCFullYear();\n\n    const newdate = `${month} ${day}, ${year}`;\n    setDate(newdate);\n    const newNote = {\n      text: 'Click the edit button to create your note',\n      id: uuidv4(),\n      star: false,\n      setEdit: false,\n      date: newdate,\n      color: '#F9F912',\n    };\n    setNotes([...notes, newNote]);\n  };\n\n  //for color changing\n  const styles = {\n    backgroundColor: color,\n  };\n  //for textArea\n  const handleChange = (e) => {\n    if (characterLimit - e.target.value.length >= 0) {\n      setNoteText(e.target.value);\n    }\n  };\n\n  //set Editing or not\n  const handleEdit = (id) => {\n    setDate('');\n    setNoteText('');\n    const result = notes.filter((note) => note.id === id);\n    if (result[0].text !== 'Click the edit button to create your note') {\n      setNoteText(result[0].text);\n    }\n    setDate(dateString(result[0].date));\n    setColor(result[0].color);\n    const newnotes = notes.map((note) => {\n      if (note.setEdit === true) {\n        note.setEdit = false;\n      }\n      return note.id === id ? { ...note, setEdit: true } : note;\n    });\n    setNotes(newnotes);\n  };\n\n  //note delete handler\n  const deleteHandler = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  //after edit saving note\n  const saveHandler = (id) => {\n    const newnotes = notes.map((note) =>\n      note.id === id\n        ? { ...note, text: noteText, date: date, color: color, setEdit: false }\n        : note\n    );\n    setNotes(newnotes);\n    setNoteText('');\n  };\n\n  //button cancel Handler\n  const cancelHandler = (id) => {\n    const newnotes = notes.map((note) =>\n      note.id === id ? { ...note, setEdit: false } : note\n    );\n    setNotes(newnotes);\n    setNoteText('');\n  };\n\n  return (\n    <Container>\n      <div className=\"body\">\n        <div className=\"header\">\n          <div className=\"btn-left\">\n            <button onClick={allNotesHandler}>All Notes</button>\n            <button onClick={starredHandler}>Starred</button>\n          </div>\n          <div className=\"btn-right\">\n            <button onClick={createNote}>Create Note</button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card-item\">\n        {notes ? (\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"notes\" direction=\"horizontal\">\n              {(provided) => (\n                <ul\n                  style={{ display: 'flex', flexWrap: 'wrap' }}\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {notes.map((note, index) =>\n                    note.setEdit ? (\n                      <Draggable\n                        key={note.id}\n                        draggableId={note.id}\n                        index={index}\n                      >\n                        {(provided) => (\n                          <li\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                          >\n                            <div className=\"card\" style={styles}>\n                              <div className=\"note-new\">\n                                <textarea\n                                  rows=\"8\"\n                                  cols=\"10\"\n                                  placeholder=\"Type to add a note...\"\n                                  value={noteText}\n                                  onChange={handleChange}\n                                ></textarea>\n                                <div className=\"note-footer-new\">\n                                  <div style={{ marginBottom: '10px' }}>\n                                    {noteText\n                                      ? characterLimit - noteText.length\n                                      : characterLimit - 0}{' '}\n                                    Remaining\n                                  </div>\n\n                                  <FormGroup\n                                    className=\"date\"\n                                    controlId=\"date\"\n                                    bsSize=\"large\"\n                                  >\n                                    <FormControl\n                                      autoFocus\n                                      type=\"date\"\n                                      value={date}\n                                      onChange={(e) => setDate(e.target.value)}\n                                    />\n                                  </FormGroup>\n                                  <span>Set Color </span>\n\n                                  <div className=\"colors\">\n                                    <div\n                                      style={{\n                                        backgroundColor: '#FFBF00',\n                                        cursor: 'pointer',\n                                        height: '20px',\n                                        width: '20px',\n                                        borderRadius: '2px',\n                                      }}\n                                      onClick={() => {\n                                        setColor('#FFBF00');\n                                      }}\n                                    >\n                                      {' '}\n                                    </div>\n\n                                    <div\n                                      style={{\n                                        backgroundColor: '#FF7F50',\n                                        cursor: 'pointer',\n                                        height: '20px',\n                                        width: '20px',\n                                        borderRadius: '2px',\n                                      }}\n                                      onClick={() => {\n                                        setColor('#FF7F50');\n                                      }}\n                                    ></div>\n\n                                    <div\n                                      style={{\n                                        backgroundColor: '#DE3163',\n                                        cursor: 'pointer',\n                                        height: '20px',\n                                        width: '20px',\n                                        borderRadius: '2px',\n                                      }}\n                                      onClick={() => {\n                                        setColor('#DE3163');\n                                      }}\n                                    ></div>\n\n                                    <div\n                                      style={{\n                                        backgroundColor: '#40E0D0',\n                                        cursor: 'pointer',\n                                        height: '20px',\n                                        width: '20px',\n                                        borderRadius: '2px',\n                                        marginRight: '5px',\n                                      }}\n                                      onClick={() => {\n                                        setColor('#40E0D0');\n                                      }}\n                                    ></div>\n\n                                    <div\n                                      style={{\n                                        backgroundColor: '#6495ED',\n                                        cursor: 'pointer',\n                                        height: '20px',\n                                        width: '20px',\n                                        borderRadius: '2px',\n                                      }}\n                                      onClick={() => {\n                                        setColor('#6495ED');\n                                      }}\n                                    ></div>\n\n                                    <div\n                                      style={{\n                                        backgroundColor: '#CCCCFF',\n                                        cursor: 'pointer',\n                                        height: '20px',\n                                        width: '20px',\n                                        borderRadius: '2px',\n                                      }}\n                                      onClick={() => {\n                                        setColor('#CCCCFF');\n                                      }}\n                                    ></div>\n                                  </div>\n                                  <div className=\"save-cancel\">\n                                    <button\n                                      className=\"save\"\n                                      onClick={() => saveHandler(note.id)}\n                                    >\n                                      Save\n                                    </button>\n\n                                    <button\n                                      className=\"save\"\n                                      onClick={() => cancelHandler(note.id)}\n                                    >\n                                      Cancel\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </li>\n                        )}\n                      </Draggable>\n                    ) : (\n                      <Draggable\n                        key={note.id}\n                        draggableId={note.id}\n                        index={index}\n                        direction=\"horizontal\"\n                      >\n                        {(provided) => (\n                          <li\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            ref={provided.innerRef}\n                          >\n                            <div\n                              className=\"card\"\n                              style={{ backgroundColor: note.color }}\n                            >\n                              <span\n                                onClick={() => starHandler(note.id)}\n                                style={{ cursor: 'pointer' }}\n                              >\n                                {note.star ? (\n                                  <i className=\"fas fa-star\"></i>\n                                ) : (\n                                  <i className=\"far fa-star\"></i>\n                                )}\n                              </span>\n                              <span>{note.text}</span>\n                              <div className=\"note-footer\">\n                                <span>{note.date}</span>\n\n                                <div className=\"card-footer\">\n                                  <span\n                                    style={{ cursor: 'pointer' }}\n                                    className=\"button\"\n                                    onClick={() => handleEdit(note.id)}\n                                  >\n                                    <i className=\"fas fa-edit\"></i>\n                                  </span>\n                                  <span\n                                    style={{ cursor: 'pointer' }}\n                                    className=\"button\"\n                                    onClick={() => deleteHandler(note.id)}\n                                  >\n                                    <i className=\"fas fa-trash\"></i>\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </li>\n                        )}\n                      </Draggable>\n                    )\n                  )}\n                </ul>\n              )}\n            </Droppable>\n          </DragDropContext>\n        ) : (\n          <> No notes found </>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Notes;\n","import Notes from './components/Notes';\nimport './styles/main.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Notes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}